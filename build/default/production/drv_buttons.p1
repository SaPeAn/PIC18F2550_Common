Version 4.0 HI-TECH Software Intermediate Code
"11 ./drv_buttons.h
[; ;./drv_buttons.h: 11: typedef struct{
[s S1 `*Vuc 1 `*Vuc 1 `uc 1 `uc 1 `*Cul 1 `ul 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S1 . Port Lat inputmask outputmask timecounter btnTimer BtnFl BtnON Toggle HoldON StuckON ]
"16 ./common.h
[; ;./common.h: 16: uint32 timestamp = 0;
[v _timestamp `ul ~T0 @X0 1 e ]
[i _timestamp
-> -> -> 0 `i `l `ul
]
"3 drv_buttons.c
[; ;drv_buttons.c: 3: btn_t CreateBtn(volatile uint8* Tris, volatile uint8* Port, volatile uint8* Lat, const uint8 inputbit, const uint8 outputbit, const uint32* timecounter)
[v _CreateBtn `(S1 ~T0 @X0 1 ef6`*Vuc`*Vuc`*Vuc`Cuc`Cuc`*Cul ]
"4
[; ;drv_buttons.c: 4: {
{
[e :U _CreateBtn ]
"3
[; ;drv_buttons.c: 3: btn_t CreateBtn(volatile uint8* Tris, volatile uint8* Port, volatile uint8* Lat, const uint8 inputbit, const uint8 outputbit, const uint32* timecounter)
[v _Tris `*Vuc ~T0 @X0 1 r1 ]
[v _Port `*Vuc ~T0 @X0 1 r2 ]
[v _Lat `*Vuc ~T0 @X0 1 r3 ]
[v _inputbit `Cuc ~T0 @X0 1 r4 ]
[v _outputbit `Cuc ~T0 @X0 1 r5 ]
[v _timecounter `*Cul ~T0 @X0 1 r6 ]
"4
[; ;drv_buttons.c: 4: {
[f ]
"5
[; ;drv_buttons.c: 5:   btn_t BTN;
[v _BTN `S1 ~T0 @X0 1 a ]
"6
[; ;drv_buttons.c: 6:   BTN.Port = Port;
[e = . _BTN 0 _Port ]
"7
[; ;drv_buttons.c: 7:   BTN.Lat = Lat;
[e = . _BTN 1 _Lat ]
"8
[; ;drv_buttons.c: 8:   switch (inputbit)
[e $U 4  ]
"9
[; ;drv_buttons.c: 9: {
{
"10
[; ;drv_buttons.c: 10:     case 0: BTN.inputmask = 0b00000001; break;
[e :U 5 ]
[e = . _BTN 2 -> -> 1 `i `uc ]
[e $U 3  ]
"11
[; ;drv_buttons.c: 11:     case 1: BTN.inputmask = 0b00000010; break;
[e :U 6 ]
[e = . _BTN 2 -> -> 2 `i `uc ]
[e $U 3  ]
"12
[; ;drv_buttons.c: 12:     case 2: BTN.inputmask = 0b00000100; break;
[e :U 7 ]
[e = . _BTN 2 -> -> 4 `i `uc ]
[e $U 3  ]
"13
[; ;drv_buttons.c: 13:     case 3: BTN.inputmask = 0b00001000; break;
[e :U 8 ]
[e = . _BTN 2 -> -> 8 `i `uc ]
[e $U 3  ]
"14
[; ;drv_buttons.c: 14:     case 4: BTN.inputmask = 0b00010000; break;
[e :U 9 ]
[e = . _BTN 2 -> -> 16 `i `uc ]
[e $U 3  ]
"15
[; ;drv_buttons.c: 15:     case 5: BTN.inputmask = 0b00100000; break;
[e :U 10 ]
[e = . _BTN 2 -> -> 32 `i `uc ]
[e $U 3  ]
"16
[; ;drv_buttons.c: 16:     case 6: BTN.inputmask = 0b01000000; break;
[e :U 11 ]
[e = . _BTN 2 -> -> 64 `i `uc ]
[e $U 3  ]
"17
[; ;drv_buttons.c: 17:     case 7: BTN.inputmask = 0b10000000; break;
[e :U 12 ]
[e = . _BTN 2 -> -> 128 `i `uc ]
[e $U 3  ]
"18
[; ;drv_buttons.c: 18:   }
}
[e $U 3  ]
[e :U 4 ]
[e [\ _inputbit , $ -> 0 `i 5
 , $ -> 1 `i 6
 , $ -> 2 `i 7
 , $ -> 3 `i 8
 , $ -> 4 `i 9
 , $ -> 5 `i 10
 , $ -> 6 `i 11
 , $ -> 7 `i 12
 3 ]
[e :U 3 ]
"19
[; ;drv_buttons.c: 19:   switch (outputbit)
[e $U 14  ]
"20
[; ;drv_buttons.c: 20:   {
{
"21
[; ;drv_buttons.c: 21:     case 0: BTN.outputmask = 0b11111110; break;
[e :U 15 ]
[e = . _BTN 3 -> -> 254 `i `uc ]
[e $U 13  ]
"22
[; ;drv_buttons.c: 22:     case 1: BTN.outputmask = 0b11111101; break;
[e :U 16 ]
[e = . _BTN 3 -> -> 253 `i `uc ]
[e $U 13  ]
"23
[; ;drv_buttons.c: 23:     case 2: BTN.outputmask = 0b11111011; break;
[e :U 17 ]
[e = . _BTN 3 -> -> 251 `i `uc ]
[e $U 13  ]
"24
[; ;drv_buttons.c: 24:     case 3: BTN.outputmask = 0b11110111; break;
[e :U 18 ]
[e = . _BTN 3 -> -> 247 `i `uc ]
[e $U 13  ]
"25
[; ;drv_buttons.c: 25:     case 4: BTN.outputmask = 0b11101111; break;
[e :U 19 ]
[e = . _BTN 3 -> -> 239 `i `uc ]
[e $U 13  ]
"26
[; ;drv_buttons.c: 26:     case 5: BTN.outputmask = 0b11011111; break;
[e :U 20 ]
[e = . _BTN 3 -> -> 223 `i `uc ]
[e $U 13  ]
"27
[; ;drv_buttons.c: 27:     case 6: BTN.outputmask = 0b10111111; break;
[e :U 21 ]
[e = . _BTN 3 -> -> 191 `i `uc ]
[e $U 13  ]
"28
[; ;drv_buttons.c: 28:     case 7: BTN.outputmask = 0b01111111; break;
[e :U 22 ]
[e = . _BTN 3 -> -> 127 `i `uc ]
[e $U 13  ]
"29
[; ;drv_buttons.c: 29:   }
}
[e $U 13  ]
[e :U 14 ]
[e [\ _outputbit , $ -> 0 `i 15
 , $ -> 1 `i 16
 , $ -> 2 `i 17
 , $ -> 3 `i 18
 , $ -> 4 `i 19
 , $ -> 5 `i 20
 , $ -> 6 `i 21
 , $ -> 7 `i 22
 13 ]
[e :U 13 ]
"30
[; ;drv_buttons.c: 30:   *(Tris) |= BTN.inputmask;
[e =| *U _Tris -> . _BTN 2 `uc ]
"31
[; ;drv_buttons.c: 31:   *(Tris) &= BTN.outputmask;
[e =& *U _Tris -> . _BTN 3 `uc ]
"32
[; ;drv_buttons.c: 32:   *(Lat) |= ~BTN.outputmask;
[e =| *U _Lat -> ~ -> . _BTN 3 `i `uc ]
"34
[; ;drv_buttons.c: 34:   BTN.timecounter = timecounter;
[e = . _BTN 4 _timecounter ]
"35
[; ;drv_buttons.c: 35:   BTN.BtnFl = 0;
[e = . _BTN 6 -> -> 0 `i `uc ]
"36
[; ;drv_buttons.c: 36:   BTN.BtnON = 0;
[e = . _BTN 7 -> -> 0 `i `uc ]
"37
[; ;drv_buttons.c: 37:   BTN.Toggle = 0;
[e = . _BTN 8 -> -> 0 `i `uc ]
"38
[; ;drv_buttons.c: 38:   BTN.HoldON = 0;
[e = . _BTN 9 -> -> 0 `i `uc ]
"39
[; ;drv_buttons.c: 39:   BTN.StuckON = 0;
[e = . _BTN 10 -> -> 0 `i `uc ]
"40
[; ;drv_buttons.c: 40:   BTN.btnTimer = 0;
[e = . _BTN 5 -> -> -> 0 `i `l `ul ]
"41
[; ;drv_buttons.c: 41:   return BTN;
[e ) _BTN ]
[e $UE 2  ]
"42
[; ;drv_buttons.c: 42: }
[e :UE 2 ]
}
"44
[; ;drv_buttons.c: 44: void TestBtn(btn_t* btn)
[v _TestBtn `(v ~T0 @X0 1 ef1`*S1 ]
"45
[; ;drv_buttons.c: 45: {
{
[e :U _TestBtn ]
"44
[; ;drv_buttons.c: 44: void TestBtn(btn_t* btn)
[v _btn `*S1 ~T0 @X0 1 r1 ]
"45
[; ;drv_buttons.c: 45: {
[f ]
"46
[; ;drv_buttons.c: 46:   *(btn->Lat) &= btn->outputmask;
[e =& *U . *U _btn 1 -> . *U _btn 3 `uc ]
"48
[; ;drv_buttons.c: 48:   if (!(*(btn->Port) & btn->inputmask) && !btn->BtnFl && ((*(btn->timecounter) - btn->btnTimer) > 50)) {
[e $ ! && && ! != & -> *U . *U _btn 0 `i -> . *U _btn 2 `i -> 0 `i ! != -> . *U _btn 6 `i -> 0 `i > - *U . *U _btn 4 . *U _btn 5 -> -> -> 50 `i `l `ul 24  ]
{
"49
[; ;drv_buttons.c: 49:     if(btn->Toggle) btn->Toggle = 0;
[e $ ! != -> . *U _btn 8 `i -> 0 `i 25  ]
[e = . *U _btn 8 -> -> 0 `i `uc ]
[e $U 26  ]
"50
[; ;drv_buttons.c: 50:     else btn->Toggle = 1;
[e :U 25 ]
[e = . *U _btn 8 -> -> 1 `i `uc ]
[e :U 26 ]
"51
[; ;drv_buttons.c: 51:     btn->BtnFl = 1;
[e = . *U _btn 6 -> -> 1 `i `uc ]
"52
[; ;drv_buttons.c: 52:     btn->btnTimer = *(btn->timecounter);
[e = . *U _btn 5 *U . *U _btn 4 ]
"53
[; ;drv_buttons.c: 53:     btn->BtnON = 1;
[e = . *U _btn 7 -> -> 1 `i `uc ]
"54
[; ;drv_buttons.c: 54:   }
}
[e :U 24 ]
"55
[; ;drv_buttons.c: 55:   if ((*(btn->Port) & btn->inputmask) && btn->BtnFl && ((*(btn->timecounter) - btn->btnTimer) > 50)) {
[e $ ! && && != & -> *U . *U _btn 0 `i -> . *U _btn 2 `i -> 0 `i != -> . *U _btn 6 `i -> 0 `i > - *U . *U _btn 4 . *U _btn 5 -> -> -> 50 `i `l `ul 27  ]
{
"56
[; ;drv_buttons.c: 56:     btn->BtnFl = 0;
[e = . *U _btn 6 -> -> 0 `i `uc ]
"57
[; ;drv_buttons.c: 57:     btn->HoldON = 0;
[e = . *U _btn 9 -> -> 0 `i `uc ]
"58
[; ;drv_buttons.c: 58:     btn->StuckON = 0;
[e = . *U _btn 10 -> -> 0 `i `uc ]
"59
[; ;drv_buttons.c: 59:     btn->btnTimer = *(btn->timecounter);
[e = . *U _btn 5 *U . *U _btn 4 ]
"60
[; ;drv_buttons.c: 60:   }
}
[e :U 27 ]
"61
[; ;drv_buttons.c: 61:   if (!(*(btn->Port) & btn->inputmask) && btn->BtnFl && ((*(btn->timecounter) - btn->btnTimer) > 1000) && ((*(btn->timecounter) - btn->btnTimer) <= 2000)) {
[e $ ! && && && ! != & -> *U . *U _btn 0 `i -> . *U _btn 2 `i -> 0 `i != -> . *U _btn 6 `i -> 0 `i > - *U . *U _btn 4 . *U _btn 5 -> -> -> 1000 `i `l `ul <= - *U . *U _btn 4 . *U _btn 5 -> -> -> 2000 `i `l `ul 28  ]
{
"62
[; ;drv_buttons.c: 62:     btn->HoldON = 1;
[e = . *U _btn 9 -> -> 1 `i `uc ]
"63
[; ;drv_buttons.c: 63:     if(btn->Toggle) btn->Toggle = 0;
[e $ ! != -> . *U _btn 8 `i -> 0 `i 29  ]
[e = . *U _btn 8 -> -> 0 `i `uc ]
[e $U 30  ]
"64
[; ;drv_buttons.c: 64:     else btn->Toggle = 1;
[e :U 29 ]
[e = . *U _btn 8 -> -> 1 `i `uc ]
[e :U 30 ]
"65
[; ;drv_buttons.c: 65:   }
}
[e :U 28 ]
"66
[; ;drv_buttons.c: 66:   if (!(*(btn->Port) & btn->inputmask) && btn->BtnFl && ((*(btn->timecounter) - btn->btnTimer) > 2000)) {
[e $ ! && && ! != & -> *U . *U _btn 0 `i -> . *U _btn 2 `i -> 0 `i != -> . *U _btn 6 `i -> 0 `i > - *U . *U _btn 4 . *U _btn 5 -> -> -> 2000 `i `l `ul 31  ]
{
"67
[; ;drv_buttons.c: 67:     btn->HoldON = 0;
[e = . *U _btn 9 -> -> 0 `i `uc ]
"68
[; ;drv_buttons.c: 68:     btn->StuckON = 1;
[e = . *U _btn 10 -> -> 1 `i `uc ]
"69
[; ;drv_buttons.c: 69:     if(btn->Toggle) btn->Toggle = 0;
[e $ ! != -> . *U _btn 8 `i -> 0 `i 32  ]
[e = . *U _btn 8 -> -> 0 `i `uc ]
[e $U 33  ]
"70
[; ;drv_buttons.c: 70:     else btn->Toggle = 1;
[e :U 32 ]
[e = . *U _btn 8 -> -> 1 `i `uc ]
[e :U 33 ]
"71
[; ;drv_buttons.c: 71:   }
}
[e :U 31 ]
"73
[; ;drv_buttons.c: 73:   *(btn->Lat) |= ~btn->outputmask;
[e =| *U . *U _btn 1 -> ~ -> . *U _btn 3 `i `uc ]
"74
[; ;drv_buttons.c: 74: }
[e :UE 23 ]
}
